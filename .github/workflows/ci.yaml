name: Release version

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        id: rust-toolchain
        with:
          toolchain: stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}-
          restore-keys: |
            ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.rustc_hash }}-

      - name: Cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --tests -- -D warnings

      - name: Cargo test
        run: cargo test --release

  tag:
    name: Create a tag
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - id: create-tag
        name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.34.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: main
    outputs:
      tag: ${{ steps.create-tag.outputs.new_tag }}

  release-server:
    name: Release server
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        id: rust-toolchain
        with:
          toolchain: stable
          override: true

      - name: Download build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}-
          restore-keys: |
            ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.rustc_hash }}-

      - name: Build
        run: |
          cargo build --release --bin=cablescout-server
          mv ./target/release/cablescout-server{,-linux-x86_64}

      - name: Upload assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ needs.tag.outputs.tag }}
          tag_name: ${{ needs.tag.outputs.tag }}
          files: |
            ./target/release/cablescout-server-*

  release-cli:
    name: Release CLI
    needs: tag
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        id: rust-toolchain
        with:
          toolchain: stable
          override: true

      - name: Download build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}-
          restore-keys: |
            ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.rustc_hash }}-

      - name: Build
        run: |
          cargo build --release --bin=cablescout-cli
          mv ./target/release/cablescout-cli{,-`echo $RUNNER_OS | tr '[:upper:]' '[:lower:]'`-x86_64}

      - name: Upload assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ needs.tag.outputs.tag }}
          tag_name: ${{ needs.tag.outputs.tag }}
          files: |
            ./target/release/cablescout-cli-*
