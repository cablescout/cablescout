name: Release version

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run server tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        id: rust-toolchain
        with:
          toolchain: stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}-
          restore-keys: |
            ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.rustc_hash }}-

      - name: Cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --tests -- -D warnings

      - name: Cargo test
        run: cargo test --release

  lint-app:
    name: Lint app
    runs-on: ubuntu-latest
    env:
      NODEJS_VERSION: 15
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        id: setup-node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODEJS_VERSION }}

      - uses: actions/cache@v2
        with:
          path: |
            app/node_modules
          key: ${{ runner.os }}-nodejs-${{ env.NODEJS_VERSION }}-${{ hashFiles('app/yarn.lock') }}-
          restore-keys: |
            ${{ runner.os }}-nodejs-${{ env.NODEJS_VERSION }}-

      - name: Install node modules
        run: |
          cd app
          yarn install

      - name: Run eslint
        run: |
          cd app
          yarn lint

  tag:
    name: Create a tag
    needs:
      - test
      - lint-app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - id: create-tag
        name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.34.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: main
    outputs:
      tag: ${{ steps.create-tag.outputs.new_tag }}

  release-server:
    name: Release server
    needs: tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        id: rust-toolchain
        with:
          toolchain: stable
          override: true

      - name: Download build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.rustc_hash }}-${{ hashFiles('Cargo.lock') }}-
          restore-keys: |
            ${{ runner.os }}-cargo-${{ steps.rust-toolchain.outputs.rustc_hash }}-

      - name: Build
        run: |
          cargo build --release --bin=cablescout-server
          mv ./target/release/cablescout-server{,-linux-x86_64}

      - name: Upload assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ needs.tag.outputs.tag }}
          draft: true
          tag_name: ${{ needs.tag.outputs.tag }}
          files: |
            ./target/release/cablescout-server-*

  release-app:
    name: Release App
    needs: tag
    strategy:
      matrix:
        config:
          - os: macos-latest
          - os: windows-latest
    runs-on: ${{ matrix.config.os }}
    env:
      NODEJS_VERSION: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js, NPM and Yarn
        id: setup-node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODEJS_VERSION }}

      - uses: actions/cache@v2
        with:
          path: |
            app/node_modules
          key: ${{ runner.os }}-nodejs-${{ env.NODEJS_VERSION }}-${{ hashFiles('app/yarn.lock') }}-
          restore-keys: |
            ${{ runner.os }}-nodejs-${{ env.NODEJS_VERSION }}-

      - name: Install node modules
        run: |
          cd app
          yarn install

      - name: Set version
        run: |
          cd app
          yarn version --no-git-tag-version --new-version ${{ needs.tag.outputs.tag }}

      - name: Build Electron app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd app
          yarn publish

  publish-release:
    name: Publish Release
    needs:
      - tag
      - release-server
      - release-app
    runs-on: ubuntu-latest
    steps:
      - name: Publish release
        run: |
          release_url=$(
            curl --fail \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/releases" |
              jq -r '.[] | select(.tag_name == "${{ needs.tag.outputs.tag }}") | .url'
          )
          curl --fail \
            -X PATCH \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "${release_url}" \
            -d '{"draft":false}'
